
environment:
  matrix:
    # normal node.exe builds from node.js
    - nodejs_version: 0.10.32
      platform: x64
      msvs_toolset: 12
    # custom visual studio 2014 builds
    - nodejs_version: 0.10.33
      platform: x64
      msvs_toolset: 14
      BUILD_ARGS: --dist-url=https://s3.amazonaws.com/mapbox/node-cpp11 --toolset=v140

os: Visual Studio 2014 CTP4

install:
  # clear out default node.exe
  - CALL node -e "console.log(process.execPath)" > node_path.txt
  - SET /p NODE_EXE_PATH=<node_path.txt
  - CALL del node_path.txt
  - CALL del /q /s "%NODE_EXE_PATH%"
  # add local node to path (since we install it for msvs_toolset == 14)
  - SET PATH=%CD%;%PATH%;
  # add local node-pre-gyp dir to path
  - SET PATH=node_modules\.bin;%PATH%
  # use 64 bit python if platform is 64 bit
  - if "%platform%" == "x64" set PATH=C:\Python27-x64;%PATH%
  - SET ARCHPATH=
  - if %platform% == x64 (SET ARCHPATH=x64/)
  # install node version per visual studio toolset
  - if "%msvs_toolset%" == "12" powershell Install-Product node $env:nodejs_version $env:platform
  - if "%msvs_toolset%" == "14" powershell Write-Output "fetching https://mapbox.s3.amazonaws.com/node-cpp11/v$env:nodejs_version/${env:ARCHPATH}node.exe"
  - if "%msvs_toolset%" == "14" powershell Start-FileDownload "https://mapbox.s3.amazonaws.com/node-cpp11/v$env:nodejs_version/${env:ARCHPATH}node.exe"
  # clear out node-gyp header cache
  - if "%msvs_toolset%" == "14" rd /s /q %USERPROFILE%\.node-gyp
  - SET PATH=C:\Program Files (x86)\MSBuild\%msvs_toolset%.0\bin;%PATH%
  - SET PATH=C:\Program Files (x86)\Microsoft Visual Studio %msvs_toolset%.0\VC\bin;%PATH%
  - if %platform% == x64 CALL "C:\Program Files (x86)\Microsoft Visual Studio %msvs_toolset%.0\VC\vcvarsall.bat" amd64
  - if %platform% == x86 CALL "C:\Program Files (x86)\Microsoft Visual Studio %msvs_toolset%.0\VC\vcvarsall.bat" amd64_x86
  - npm install --msvs_version=2013 %BUILD_ARGS% --loglevel=http
  - npm test

build: OFF
test: OFF
deploy: OFF
